{"version":3,"sources":["components/TodoList/TodoList.tsx","api.js","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","activeTodoId","filterQuery","showTodos","onRandomizer","handleShowTodos","handleFilterQuery","handleClick","handleChange","className","type","placeholder","value","onChange","onClick","event","map","id","userId","title","completed","cn","checked","readOnly","request","url","options","fetch","then","res","ok","json","Error","status","statusText","CurrentUser","state","user","this","requestGetUser","prevProps","props","setState","name","email","phone","React","Component","App","selectedUserId","isActiveTodoId","preventDefault","prevState","sort","Math","random","setFilterValue","target","setShowTodos","setSelectedUserId","setCompletedTodo","todo","newTodos","filter","visualizedTodos","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79a3b2e4.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\n\nimport cn from 'classnames';\n\ninterface Props {\n  todos: Todo[],\n  activeTodoId: number,\n  filterQuery: string,\n  showTodos: string,\n  onRandomizer: any,\n  handleShowTodos: any,\n  handleFilterQuery: any,\n  handleClick: any,\n  handleChange: any,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  activeTodoId,\n  filterQuery,\n  showTodos,\n  onRandomizer,\n  handleShowTodos,\n  handleFilterQuery,\n  handleClick,\n  handleChange,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n\n      <input\n        type=\"text\"\n        className=\"TodoList__item inputFilter\"\n        placeholder=\"Filter the todos by title\"\n        value={filterQuery}\n        onChange={handleFilterQuery}\n      />\n\n      <select\n        className=\"TodoList__item select\"\n        value={showTodos}\n        onChange={handleShowTodos}\n      >\n        <option value=\"all\">All</option>\n        <option value=\"active\">Active</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={(event => onRandomizer(event))}\n      >\n        Randomize\n      </button>\n\n      <ul className=\"TodoList__list\">\n        {todos.map(({\n          id,\n          userId,\n          title,\n          completed,\n        }) => (\n          <li\n            key={id}\n            className={cn(\n              'TodoList__item',\n              { 'TodoList__item--unchecked': !completed },\n              { 'TodoList__item--checked': completed },\n            )}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={completed}\n                readOnly\n                onChange={event => handleChange(event, id)}\n              />\n              <p>{title}</p>\n            </label>\n\n            <button\n              className={cn(\n                { 'TodoList__user-button': activeTodoId !== id },\n                { 'TodoList__user-button--selected': activeTodoId === id },\n                'button',\n              )}\n              type=\"button\"\n              onClick={(event => handleClick(event, userId, id))}\n            >\n              User&nbsp;#\n              {userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = (url, options) => {\n  return fetch(`${BASE_URL}${url}`, options)\n    .then(res => {\n      if (!res.ok) {\n        return new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n};\n\nexport const getTodos = () => {\n  return request('/todos');\n};\n\nexport const getUser = (userId) => {\n  return request(`/users/${userId}`);\n};\n","import React from 'react';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\ninterface Props {\n  userId: number,\n  handleClick: any,\n}\n\ninterface State {\n  user: User | null,\n}\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.requestGetUser();\n  }\n\n  componentDidUpdate(prevProps: any) {\n    if (prevProps.userId !== this.props.userId) {\n      this.requestGetUser();\n    }\n  }\n\n  requestGetUser() {\n    getUser(this.props.userId)\n      .then(user => {\n        this.setState({ user });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:&nbsp;\n            {user?.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n        <p className=\"CurrentUser__email\">{user?.email}</p>\n        <p className=\"CurrentUser__phone\">{user?.phone}</p>\n\n        <button\n          className=\"CurrentUser__clear button\"\n          type=\"button\"\n          onClick={(event => this.props.handleClick(event, 0, 0))}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\ninterface State {\n  todos: Todo[];\n  selectedUserId: number;\n  isActiveTodoId: number;\n  filterQuery: string;\n  showTodos: string;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n    isActiveTodoId: 0,\n    filterQuery: '',\n    showTodos: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => {\n        this.setState({ todos });\n      });\n  }\n\n  onRandomizer = (event: React.MouseEvent) => {\n    event.preventDefault();\n\n    this.setState(prevState => ({\n      todos: prevState.todos.sort(() => Math.random() - 0.5),\n    }));\n  };\n\n  setFilterValue = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      filterQuery: target.value,\n    });\n  };\n\n  setShowTodos = ({ target }: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      showTodos: target.value,\n    });\n  };\n\n  setSelectedUserId = (event: React.MouseEvent, userId: number, id: number) => {\n    event.preventDefault();\n\n    this.setState({\n      selectedUserId: userId,\n      isActiveTodoId: id,\n    });\n  };\n\n  setCompletedTodo = ({ target }: React.ChangeEvent<HTMLInputElement>, id: any) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: target.checked,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  render() {\n    const {\n      todos,\n      selectedUserId,\n      isActiveTodoId,\n      filterQuery,\n      showTodos,\n    } = this.state;\n\n    let newTodos;\n\n    switch (showTodos) {\n      case 'active':\n        newTodos = todos.filter(({ completed }) => !completed);\n        break;\n\n      case 'completed':\n        newTodos = todos.filter(({ completed }) => completed);\n        break;\n\n      default:\n        newTodos = todos;\n        break;\n    }\n\n    const visualizedTodos = newTodos\n      .filter(({ title }) => title?.toLowerCase()\n        .includes(filterQuery.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={visualizedTodos}\n            activeTodoId={isActiveTodoId}\n            filterQuery={filterQuery}\n            showTodos={showTodos}\n            onRandomizer={this.onRandomizer}\n            handleShowTodos={this.setShowTodos}\n            handleFilterQuery={this.setFilterValue}\n            handleClick={this.setSelectedUserId}\n            handleChange={this.setCompletedTodo}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                handleClick={this.setSelectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}